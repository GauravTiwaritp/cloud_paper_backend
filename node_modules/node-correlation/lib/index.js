"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.correlation = void 0;
const fast_isnumeric_1 = __importDefault(require("fast-isnumeric"));
const Average_1 = require("./Average");
const StandardDeviation_1 = require("./StandardDeviation");
const isValidNumericArray = (values) => {
    if (!(values instanceof Array))
        throw TypeError('The values should be an array');
    const hasNonNumericValue = values.find((value) => !(0, fast_isnumeric_1.default)(value));
    if (hasNonNumericValue)
        throw TypeError('The all values should be numeric');
};
const correlation = (xValues, yValues) => {
    isValidNumericArray(xValues);
    isValidNumericArray(yValues);
    if (xValues.length !== yValues.length)
        throw TypeError('The arrays should have the same size');
    const standardDeviationX = (0, StandardDeviation_1.standardDeviation)(xValues);
    const averageX = (0, Average_1.simple)(xValues);
    const standardDeviationY = (0, StandardDeviation_1.standardDeviation)(yValues);
    const averageY = (0, Average_1.simple)(yValues);
    const total = xValues.length;
    let sumOfSquares = 0;
    for (var index = 0, l = total; index < l; index++) {
        const x = xValues[index];
        const y = yValues[index];
        sumOfSquares += (x - averageX) * (y - averageY);
    }
    const result = sumOfSquares / ((xValues.length - 1) * standardDeviationX * standardDeviationY);
    return result;
};
exports.correlation = correlation;
